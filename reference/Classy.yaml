openapi: 3.0.0
info:
  title: Classy
  version: '1.0'
  description: Lumibib Classy REST API
  contact:
    name: Lumibib
    email: support@lumibib.ch
  termsOfService: 'https://lumibib.ch/legal/terms'
servers:
  - url: 'https://demo.classy.lumibib.ch/api/v1'
    description: Demo instance
  - url: 'https://ORG.classy.lumibib.ch/api/v1'
    description: Your organisation
paths:
  /classifications:
    get:
      summary: Get Classifications
      tags: []
      operationId: get-classifications
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Classification'
              examples:
                Example:
                  $ref: '#/components/examples/Classifications'
      description: Retrieve all classifications.
      parameters:
        - $ref: '#/components/parameters/page_number'
        - $ref: '#/components/parameters/page_size'
        - $ref: '#/components/parameters/sort'
        - schema:
            type: string
            example: Lorem
          in: query
          name: 'filter[name]'
          description: Allow to scope results on the `name` field.
        - schema:
            type: string
            format: date
            enum:
              - active
              - inactive
          in: query
          name: 'filter[status]'
          description: Allow to scope results on the `status` field.
    parameters: []
  '/classifications/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: Unique ID
    get:
      summary: Get Classification by ID
      tags: []
      responses:
        '200':
          description: Classification Found
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Classification'
              examples:
                Get Classification A:
                  value:
                    type: classifications
                    id: K8lwg7bGxznj4e
                    attributes:
                      name: Classification A
                      description: Example A
                      status: active
                      catalog_uri: 'https://example.com'
                      codes:
                        - - '100'
                          - Label A fr
                          - Note A fr
                          - Comment A
                      data: []
                      createdAt: '2021-07-11T11:31:02.000000Z'
                      updatedAt: '2021-07-11T11:31:02.000000Z'
                    links:
                      self: 'http://test.classy.test/api/v1/classifications/K8lwg7bGxznj4e'
        '404':
          description: Classification Not Found
      operationId: get-classifications-id
      description: Retrieve the classification with the matching ID.
      parameters: []
  /sequentialprefixes:
    get:
      summary: Get Sequential Prefixes
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/SequentialPrefix'
      operationId: get-sequentialprefixes
      description: Retrieve all sequential prefixes.
      parameters:
        - $ref: '#/components/parameters/page_number'
        - $ref: '#/components/parameters/page_size'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/sort'
        - schema:
            type: string
            example: AAAA-
          in: query
          name: 'filter[prefix]'
          description: Allow to scope results on the `prefix` field.
        - schema:
            type: string
            format: date
            enum:
              - active
              - inactive
          in: query
          name: 'filter[status]'
          description: Allow to scope results on the `status` field.
  '/sequentialprefixes/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: Unique ID
    get:
      summary: Get Sequential Prefix by ID
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SequentialPrefix'
      operationId: get-sequentialprefixes-id
      description: Retrieve the sequential prefix with the matching ID.
components:
  schemas:
    Classification:
      description: ''
      type: object
      x-examples:
        Example A:
          $ref: '#/components/examples/Classifications'
        Example B:
          value:
            jsonapi:
              version: string
            data:
              - type: string
                id: string
                attributes:
                  name: string
                  description: null
                  status: string
                  catalog_uri: null
                  codes: []
                  data: null
                  createdAt: '2019-08-24T14:15:22Z'
                  updatedAt: '2019-08-24T14:15:22Z'
                links:
                  self: 'http://example.com'
      properties:
        jsonapi:
          type: object
          properties:
            version:
              type: string
        data:
          type: array
          uniqueItems: true
          items:
            type: object
            properties:
              type:
                type: string
              id:
                type: string
              attributes:
                type: object
                properties:
                  name:
                    type: string
                  description: {}
                  status:
                    type: string
                  catalog_uri: {}
                  codes:
                    type: array
                    items: {}
                  data: {}
                  createdAt:
                    type: string
                    format: date-time
                  updatedAt:
                    type: string
                    format: date-time
              links:
                type: object
                properties:
                  self:
                    type: string
                    format: uri
        meta:
          type: object
          properties:
            page:
              type: object
              properties:
                current_page:
                  type: number
                from:
                  type: number
                last_page:
                  type: number
                per_page:
                  type: number
                to:
                  type: number
                total:
                  type: number
        links:
          type: object
          properties:
            first:
              type: string
            last:
              type: string
    SequentialPrefix:
      description: ''
      type: object
      x-examples:
        example-1:
          type: sequentialprefixes
          id: R8M4yx8BW0LlQZ
          attributes:
            prefix: ABC-
            description: 'Ad Quam ob rem ut ii qui superiores sunt submittere se debent in amicitia, sic quodam modo inferiores extollere.'
            status: active
            first_code: 1
            last_code: 100
            code_incrementation: 1
            desactivated_codes: null
            last_code_added_datetime: '2021-04-15 12:00:00'
            data: null
            createdAt: null
            updatedAt: '2021-07-08T14:36:49.000000Z'
          links:
            self: 'http://test.classy.test/api/v1/sequentialprefixes/R8M4yx8BW0LlQZ'
      properties:
        type:
          type: string
        id:
          type: string
          example: AAAAAAAAAAAAAA
        attributes:
          type: object
          required:
            - prefix
            - first_code
            - last_code
            - code_incrementation
          properties:
            prefix:
              type: string
            description:
              type: string
            status:
              type: string
            first_code:
              type: number
            last_code:
              type: number
            code_incrementation:
              type: number
            desactivated_codes:
              type: string
            last_code_added_datetime:
              type: string
            data:
              type: array
              items: {}
            createdAt:
              type: string
              format: date-time
            updatedAt:
              type: string
              format: date-time
        links:
          type: object
          required:
            - self
          properties:
            self:
              type: string
              minLength: 1
      required:
        - type
        - id
        - attributes
        - links
  securitySchemes: {}
  parameters:
    page_size:
      name: 'page[size]'
      in: query
      required: false
      schema:
        type: integer
        example: 50
        default: 25
      description: Number of results per page.
      allowEmptyValue: true
    filter:
      name: 'filter[<field>]'
      in: query
      required: false
      schema:
        type: string
        example: 'filter[name]=hello-world'
      description: Allow to scope results based on a field and value.
    sort:
      name: sort
      in: query
      required: false
      schema:
        type: string
        example: name | -name
      description: The order in which resources are to be returning. Adding a ´-´ before the field sorts resources in the descending order.
      allowEmptyValue: true
      style: form
    page_number:
      name: 'page[number]'
      in: query
      required: false
      schema:
        type: integer
      description: Return a subset of results.
      allowEmptyValue: true
  examples:
    Classifications:
      value:
        jsonapi:
          version: '1.0'
        data:
          - type: classifications
            id: R8M4yx8BW0LlQZ
            attributes:
              name: Test
              description: null
              status: active
              catalog_uri: null
              codes:
                - - '100'
                  - Label A fr
                  - Note A fr
                  - Comment A
              data: null
              createdAt: '2021-07-13T08:34:37.000000Z'
              updatedAt: '2021-07-13T08:34:37.000000Z'
            links:
              self: 'https://demo.classy.lumibib.ch/api/v1/classifications/R8M4yx8BW0LlQZ'
        meta:
          page:
            current_page: 1
            from: 1
            last_page: 1
            per_page: 25
            to: 1
            total: 1
        links:
          first: 'https://demo.classy.lumibib.ch/api/v1/classifications'
          last: 'https://demo.classy.lumibib.ch/api/v1/classifications'
